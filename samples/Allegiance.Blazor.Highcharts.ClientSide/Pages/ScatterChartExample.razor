@page "/scatter-chart"
@inject IChartService chartService
@inject IJSRuntime jsRuntime


<h3>Scatter Chart</h3>

<figure class="highcharts-figure">
    <div id="scatterchart"></div>
</figure>

<h4>Code Example</h4>
<pre class="prettyprint opacity-load">
@@code{
    private ChartObject ScatterChart = new ChartObject()
    {
        Chart = new Chart()
        {
            Type = ChartType.Scatter,
            ZoomType = ZoomType.XY
        },
        Title = new Title("Height Versus Weight of 507 Individuals by Gender"),
        Subtitle = new Title("Source: Heinz  2003"),
        XAxis = new XAxis()
        {
            Title = new Title("Height (cm)"),
            StartOnTick = true,
            EendOnTick = true,
            ShowLastLabel = true,
        },
        YAxis = new YAxis()
        {
            Title = new Title("Weight (kg)")
        },
        Legend = new Legend()
        {
            Layout = Layout.Vertical,
            Align = Align.Left,
            VerticalAlign = Align.Top,
            X = 100,
            Y = 70,
            Floating = true,
            BorderWidth = 1
        },
        PlotOptions = new PlotOptions()
        {
            Scatter = new Scatter()
            {
                Marker = new Marker()
                {
                    Radius = 5,
                    States = new States()
                    {
                        Hover = new Hover()
                        {
                            Enabled = true,
                            LineColor = "rgb(100,100,100)"
                        },
                    }
                },
                States = new States()
                {
                    Hover = new Hover()
                    {
                        Marker = new Marker(false)
                    }
                },
                Tooltip = new Tooltip()
                {
                    HeaderFormat = "&lt;b>{series.name}&lt;/b>&lt;br>",
                    PointFormat = "{point.x} cm, {point.y} kg"
                }


            }
        },
        Series = new List&lt;SeriesElement>()
        {
            new SeriesElement()
            {
                Name = "Female",
                Color = "rgba(223, 83, 83, .5)",
                Data =new List&lt;object>()
                {
                    {new Datum(){X = 161.2, Y = 51.6}},
                    {new Datum(){X = 167.5, Y = 59.0}},
                    {new Datum(){X = 159.5, Y = 49.2}},
                    {new Datum(){X = 157.0, Y = 63.0}},
                    {new Datum(){X = 155.8, Y = 53.6}},
                    {new Datum(){X = 170.0, Y = 59.0}},
                    {new Datum(){X = 159.1, Y = 47.6}},
                    {new Datum(){X = 166.0, Y = 69.8}},
                    {new Datum(){X = 176.2, Y = 66.8}},
                    {new Datum(){X = 160.2, Y = 75.2}},
                    {new Datum(){X = 172.5, Y = 55.2}},
                    {new Datum(){X = 170.9, Y = 54.2}},
                    {new Datum(){X = 172.9, Y = 62.5}},
                    {new Datum(){X = 153.4, Y = 42.0}},
                    {new Datum(){X = 160.0, Y = 50.0}},
                    {new Datum(){X = 147.2, Y = 49.8}},
                    {new Datum(){X = 168.2, Y = 49.2}},
                    {new Datum(){X = 175.0, Y = 73.2}},
                    {new Datum(){X = 157.0, Y = 47.8}},
                    {new Datum(){X = 167.6, Y = 68.8}},
                    {new Datum(){X = 159.5, Y = 50.6}},
                    {new Datum(){X = 175.0, Y = 82.5}},
                    {new Datum(){X = 166.8, Y = 57.2}},
                    {new Datum(){X = 176.5, Y = 87.8}},
                    {new Datum(){X = 170.2, Y = 72.8}}
                }

            },
            new SeriesElement()
            {
                Name = "Male",
                Color = "rgba(119, 152, 191, .5)",
                Data =new List&lt;object>()
                {
                    {new Datum(){ X = 174.0, Y = 65.6}},
                    {new Datum(){X = 175.3, Y = 71.8}},
                    {new Datum(){X = 193.5, Y = 80.7}},
                    {new Datum(){X = 186.5, Y = 72.6}},
                    {new Datum(){X = 187.2, Y = 78.8}},
                    {new Datum(){X = 181.5, Y = 74.8}},
                    {new Datum(){X = 184.0, Y = 86.4}},
                    {new Datum(){X = 184.5, Y = 78.4}},
                    {new Datum(){X = 175.0, Y = 62.0}},
                    {new Datum(){X = 184.0, Y = 81.6}},
                    {new Datum(){X = 180.0, Y = 76.6}},
                    {new Datum(){X = 177.8, Y = 83.6}},
                    {new Datum(){X = 192.0, Y = 90.0}},
                    {new Datum(){X = 176.0, Y = 74.6}},
                    {new Datum(){X = 174.0, Y = 71.0}},
                    {new Datum(){X = 184.0, Y = 79.6}},
                    {new Datum(){X = 192.7, Y = 93.8}},
                    {new Datum(){X = 171.5, Y = 70.0}},
                    {new Datum(){X = 173.0, Y = 72.4}},
                    {new Datum(){X = 176.0, Y = 85.9}}
                }
            }
        }
    };

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        chartService.RenderChart("scatterchart", ScatterChart.Generate());
        jsRuntime.InvokeVoidAsync("prettyPrint");
    }
}
</pre>

@code{
    private ChartObject ScatterChart = new ChartObject()
    {
        Chart = new Chart()
        {
            Type = ChartType.Scatter,
            ZoomType = ZoomType.XY
        },
        Title = new Title("Height Versus Weight of 507 Individuals by Gender"),
        Subtitle = new Title("Source: Heinz  2003"),
        XAxis = new XAxis()
        {
            Title = new Title("Height (cm)"),
            StartOnTick = true,
            EendOnTick = true,
            ShowLastLabel = true,
        },
        YAxis = new YAxis()
        {
            Title = new Title("Weight (kg)")
        },
        Legend = new Legend()
        {
            Layout = Layout.Vertical,
            Align = Align.Left,
            VerticalAlign = Align.Top,
            X = 100,
            Y = 70,
            Floating = true,
            BorderWidth = 1
        },
        PlotOptions = new PlotOptions()
        {
            Scatter = new PlotOptionsScatter()
            {
                Marker = new Marker()
                {
                    Radius = 5,
                    States = new States()
                    {
                        Hover = new Hover()
                        {
                            Enabled = true,
                            LineColor = "rgb(100,100,100)"
                        },
                    }
                },
                States = new States()
                {
                    Hover = new Hover()
                    {
                        Marker = new Marker(false)
                    }
                },
                Tooltip = new Tooltip()
                {
                    HeaderFormat = "<b>{series.name}</b><br>",
                    PointFormat = "{point.x} cm, {point.y} kg"
                }


            }
        },
        Series = new List<SeriesElement>()
        {
            new SeriesElement()
            {
                Name = "Female",
                Color = "rgba(223, 83, 83, .5)",
                Data =new List<object>()
                {
                    {new Datum(){X = 161.2, Y = 51.6}},
                    {new Datum(){X = 167.5, Y = 59.0}},
                    {new Datum(){X = 159.5, Y = 49.2}},
                    {new Datum(){X = 157.0, Y = 63.0}},
                    {new Datum(){X = 155.8, Y = 53.6}},
                    {new Datum(){X = 170.0, Y = 59.0}},
                    {new Datum(){X = 159.1, Y = 47.6}},
                    {new Datum(){X = 166.0, Y = 69.8}},
                    {new Datum(){X = 176.2, Y = 66.8}},
                    {new Datum(){X = 160.2, Y = 75.2}},
                    {new Datum(){X = 172.5, Y = 55.2}},
                    {new Datum(){X = 170.9, Y = 54.2}},
                    {new Datum(){X = 172.9, Y = 62.5}},
                    {new Datum(){X = 153.4, Y = 42.0}},
                    {new Datum(){X = 160.0, Y = 50.0}},
                    {new Datum(){X = 147.2, Y = 49.8}},
                    {new Datum(){X = 168.2, Y = 49.2}},
                    {new Datum(){X = 175.0, Y = 73.2}},
                    {new Datum(){X = 157.0, Y = 47.8}},
                    {new Datum(){X = 167.6, Y = 68.8}},
                    {new Datum(){X = 159.5, Y = 50.6}},
                    {new Datum(){X = 175.0, Y = 82.5}},
                    {new Datum(){X = 166.8, Y = 57.2}},
                    {new Datum(){X = 176.5, Y = 87.8}},
                    {new Datum(){X = 170.2, Y = 72.8}}
                }

            },
            new SeriesElement()
            {
                Name = "Male",
                Color = "rgba(119, 152, 191, .5)",
                Data =new List<object>()
                {
                    {new Datum(){ X = 174.0, Y = 65.6}},
                    {new Datum(){X = 175.3, Y = 71.8}},
                    {new Datum(){X = 193.5, Y = 80.7}},
                    {new Datum(){X = 186.5, Y = 72.6}},
                    {new Datum(){X = 187.2, Y = 78.8}},
                    {new Datum(){X = 181.5, Y = 74.8}},
                    {new Datum(){X = 184.0, Y = 86.4}},
                    {new Datum(){X = 184.5, Y = 78.4}},
                    {new Datum(){X = 175.0, Y = 62.0}},
                    {new Datum(){X = 184.0, Y = 81.6}},
                    {new Datum(){X = 180.0, Y = 76.6}},
                    {new Datum(){X = 177.8, Y = 83.6}},
                    {new Datum(){X = 192.0, Y = 90.0}},
                    {new Datum(){X = 176.0, Y = 74.6}},
                    {new Datum(){X = 174.0, Y = 71.0}},
                    {new Datum(){X = 184.0, Y = 79.6}},
                    {new Datum(){X = 192.7, Y = 93.8}},
                    {new Datum(){X = 171.5, Y = 70.0}},
                    {new Datum(){X = 173.0, Y = 72.4}},
                    {new Datum(){X = 176.0, Y = 85.9}}
                }
            }
        }
    };

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        chartService.RenderChart("scatterchart", ScatterChart.Generate());
        jsRuntime.InvokeVoidAsync("prettyPrint");
    }
}