@page "/pie-chart"
@inject IChartService chartService
@inject IJSRuntime jsRuntime

<h3>Pie Chart</h3>

<figure class="highcharts-figure">
    <div id="piechart"></div>    
</figure>

<div>
    <button @onclick="RefreshData">Refresh Data</button>
    <button @onclick="Destroy">Test Destroy</button>

</div>

<h4>Code Example</h4>
<pre class="prettyprint opacity-load">

@@page &quot;/pie-chart&quot;
@@inject IChartService chartService
@@inject IJSRuntime jsRuntime

&lt;h3>Pie Chart&lt;/h3>

&lt;figure class=&quot;highcharts-figure&quot;>
&lt;div id=&quot;piechart&quot;>&lt;/div>    
&lt;/figure>

&lt;div>
&lt;button @@onclick=&quot;RefreshData&quot;>Refresh Data&lt;/button>
&lt;button @@onclick=&quot;Destroy&quot;>Test Destroy&lt;/button>

&lt;/div>

@@code {
    private ChartObject PieChart = new ChartObject()
    {
        Chart = new Chart(ChartType.Pie),
        Tooltip = new Tooltip(false),
        Legend = new Legend(true),
        PlotOptions = new PlotOptions()
        {
            Pie = new PlotOptionsPie()
            {
                AllowPointSelect = false,
                ShowInLegend = true,
                Cursor = CursorType.Pointer,
                DataLabels = new Labels(false),
                States = new States(new Hover(false)),
            },
            Series = null
        },
        Title = new Title(&quot;Browser market shares in January, 2018&quot;),
        Series = new List&lt;SeriesElement>()
        {
            new SeriesElement()
            {
                Name = &quot;Brands&quot;,
                Data = new List&lt;object>()
                {
                    {new List&lt;object>(){ &quot;Chrome&quot;, 61.4 } },
                    {new List&lt;object>(){ &quot;Internet Explorer&quot;, 11.84 } },
                    {new List&lt;object>(){ &quot;Firefox&quot;, 10.85 } },
                    {new List&lt;object>(){ &quot;Edge&quot;, 4.67 } },
                    {new List&lt;object>(){ &quot;Safari&quot;, 4.18 } },
                    {new List&lt;object>(){ &quot;Other&quot;, 7.05 } }
                }

            }
        }
    };

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            chartService.RenderChart(&quot;piechart&quot;, PieChart.Generate());
        }
    }

    private async Task Destroy()
    {
        await PieChart.DestroyAllChartsAsync(jsRuntime);
    }

    private async Task RefreshData()
    {
        var random = new Random();
        var Data = new List&lt;object>()
                {
                    {new List&lt;object>(){ &quot;Chrome&quot;, random.Next(0, 100) } },
                    {new List&lt;object>(){ &quot;Internet Explorer&quot;, random.Next(0, 100) } },
                    {new List&lt;object>(){ &quot;Firefox&quot;, random.Next(0, 100) } },
                    {new List&lt;object>(){ &quot;Edge&quot;, random.Next(0, 100) } },
                    {new List&lt;object>(){ &quot;Safari&quot;, random.Next(0, 100) } },
                    {new List&lt;object>(){ &quot;Other&quot;, random.Next(0, 100) } }
                };
        await PieChart.ChangeSeriesAsync(jsRuntime, &quot;piechart&quot;, Data);
    }

}


</pre>


@code {

    private ChartObject PieChart = new ChartObject()
    {
        Chart = new Chart(ChartType.Pie),
        Tooltip = new Tooltip(false),
        Legend = new Legend(true),
        PlotOptions = new PlotOptions()
        {
            Pie = new PlotOptionsPie()
            {
                AllowPointSelect = false,
                ShowInLegend = true,
                Cursor = CursorType.Pointer,
                DataLabels = new Labels(false),
                States = new States(new Hover(false)),
            },
            Series = null
        },
        Title = new Title("Browser market shares in January, 2018"),
        Series = new List<SeriesElement>()
        {
            new SeriesElement()
            {
                Name = "Brands",
                Data = new List<object?>()
                {
                    {new List<object>(){ "Chrome", 61.4 } },
                    {new List<object>(){ "Internet Explorer", 11.84 } },
                    {new List<object>(){ "Firefox", 10.85 } },
                    {new List<object>(){ "Edge", 4.67 } },
                    {new List<object>(){ "Safari", 4.18 } },
                    {new List<object>(){ "Other", 7.05 } }
                }

            }
        }
    };

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            chartService.RenderChart("piechart", PieChart.Generate());
            jsRuntime.InvokeVoidAsync("prettyPrint");
        }
    }

    private async Task Destroy()
    {
        await PieChart.DestroyAllChartsAsync(jsRuntime);
    }

    private async Task RefreshData()
    {
        var random = new Random();
        var Data = new List<object>()
                {
                    {new List<object>(){ "Chrome", random.Next(0, 100) } },
                    {new List<object>(){ "Internet Explorer", random.Next(0, 100) } },
                    {new List<object>(){ "Firefox", random.Next(0, 100) } },
                    {new List<object>(){ "Edge", random.Next(0, 100) } },
                    {new List<object>(){ "Safari", random.Next(0, 100) } },
                    {new List<object>(){ "Other", random.Next(0, 100) } }
                };
        await PieChart.ChangeSeriesAsync(jsRuntime, "piechart", Data);
    }

}
