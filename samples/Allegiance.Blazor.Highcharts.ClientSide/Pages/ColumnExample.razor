@page "/column-chart"
@inject IChartService chartService
@inject IJSRuntime jsRuntime
<h3>Column Chart</h3>

<figure class="highcharts-figure">
    <div id="columnchart"></div>
</figure>


<h4>Code Example</h4>
<pre class="prettyprint opacity-load">
@@code {
 private ChartObject ColumnChart = new ChartObject()
    {
        Chart = new Chart(ChartType.Column, false),
        Title = new Title("ASCII value of letters in 'COLUMN'"),
        XAxis = new XAxis(AxisType.Category),
        YAxis = new YAxis()
        {
            Title = new Title("Letter"),
        },
        Legend = new Legend(false),
        PlotOptions = new PlotOptions()
        {
            Column = new Column(5),
            Series = new PlotOptionsSeries()
            {
                PointWidth = 60
            }

        },
        Series = new List&lt;SeriesElement>()
		{
            new SeriesElement()
            {
                Name = "ASCII value",
                ColorByPoint = true,
                Data = new List&lt;object>()
                {
                    {new Datum(){
                        Name = "C", 
                        Y = 67
                    }},
                    {new Datum(){
                        Name = "O", 
                        Y = 79
                    }},
                    {new Datum(){
                        Name = "L", 
                        Y = 76
                    }},
                    {new Datum(){
                        Name = "U", 
                        Y = 85
                    }},
                    {new Datum(){
                        Name = "M", 
                        Y = 77
                    }},
                    {new Datum(){
                        Name = "N", 
                        Y = 78
                    }}
                }
            }
        }
    };

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        chartService.RenderChart("columnchart", ColumnChart.Generate());
        jsRuntime.InvokeVoidAsync("prettyPrint");
    }


}

</pre>


@code {
    private ChartObject ColumnChart = new ChartObject()
    {
        Chart = new Chart(ChartType.Column, false),
        Title = new Title("ASCII value of letters in 'COLUMN'"),
        XAxis = new XAxis(AxisType.Category),
        YAxis = new YAxis()
        {
            Title = new Title("Letter"),
        },
        Legend = new Legend(false),
        PlotOptions = new PlotOptions()
        {
            Column = new PlotOptionsColumn(5),
            Series = new PlotOptionsSeries()
            {
                PointWidth = 60
            }

        },
        Series = new List<SeriesElement>()
        {
            new SeriesElement()
            {
                Name = "ASCII value",
                ColorByPoint = true,
                Data = new List<object>()
                {
                    {new Datum(){
                        Name = "C", 
                        Y = 67
                    }},
                    {new Datum(){
                        Name = "O", 
                        Y = 79
                    }},
                    {new Datum(){
                        Name = "L", 
                        Y = 76
                    }},
                    {new Datum(){
                        Name = "U", 
                        Y = 85
                    }},
                    {new Datum(){
                        Name = "M", 
                        Y = 77
                    }},
                    {new Datum(){
                        Name = "N", 
                        Y = 78
                    }}
                }
            }
        }
    };

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        chartService.RenderChart("columnchart", ColumnChart.Generate());
        jsRuntime.InvokeVoidAsync("prettyPrint");
    }


}
