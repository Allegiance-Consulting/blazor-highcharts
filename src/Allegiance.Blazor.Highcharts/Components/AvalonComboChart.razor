@inject IChartService chartService
@inject IJSRuntime jsRuntime


<div id="avaloncombochart-@uniqueID"></div>


@code {

    [Parameter]
    public string uniqueID { get; set; } = "demo";

    [Parameter]
    public XAxis xAxis { get; set; } = null;
    [Parameter]
    public YAxis yAxis { get; set; } = null;

    [Parameter]
    public string titleText { get; set; } = "";
    [Parameter]
    public string tooltipValuePrefix { get; set; } = "R";
    [Parameter]
    public bool? tooltipSplit { get; set; } = true;
    [Parameter]
    public Tooltip tooltip { get; set; } = null;

    [Parameter]
    public List<PlotLine> plotLines { get; set; } = null;

    [Parameter]
    public PlotOptions plotOptions { get; set; } = null;

    [Parameter]
    public List<SeriesElement> series { get; set; } = null;


    [Parameter]
    public bool exportEnabled { get; set; } = false;
    [Parameter]
    public int? exportingSourceWidth { get; set; } = 900;
    [Parameter]
    public int? exportingSourceHeight { get; set; } = 350;

    private ChartObject ComboChart = new ChartObject();
    public void SetGraphParameters()
    {
        ComboChart.Credits.Enabled = false;
        ComboChart.Title = new Title(titleText);
        ComboChart.XAxis = new XAxis()
        {
            TickmarkPlacement = TickmarkPlacement.On,
            Title = new Title(false),
            PlotLines = plotLines,
            Categories = new List<string>(){ "38", "38", "38", "38", "38", "38", "38", "39", "39", "39", "39", "39", "39", "39", "39", "39", "39", "39", "39", "40", "40", "40", "40", "40", "40", "40", "40", "40", "40", "40", "40", "41", "41", "41", "41", "41", "41", "41", "41", "41", "41", "41", "41", "42", "42", "42", "42", "42", "42", "42", "42", "42", "42", "42", "42", "43", "43", "43", "43", "43", "43", "43", "43", "43", "43", "43", "43", "44", "44", "44", "44", "44", "44", "44", "44", "44", "44", "44", "44", "45", "45", "45", "45", "45", "45", "45", "45", "45", "45", "45", "45", "46", "46", "46", "46", "46", "46", "46", "46", "46", "46", "46", "46", "47", "47", "47", "47", "47", "47", "47", "47", "47", "47", "47", "47", "48", "48", "48", "48", "48", "48", "48", "48", "48", "48", "48", "48", "49", "49", "49", "49", "49", "49", "49", "49", "49", "49", "49", "49", "50", "50", "50", "50", "50", "50", "50", "50", "50", "50", "50", "50", "51", "51", "51", "51", "51", "51", "51", "51", "51", "51", "51", "51", "52", "52", "52", "52", "52", "52", "52", "52", "52", "52", "52", "52", "53", "53", "53", "53", "53", "53", "53", "53", "53", "53", "53", "53", "54", "54", "54", "54", "54", "54", "54", "54", "54", "54", "54", "54", "55", "55", "55", "55", "55", "55", "55", "55", "55", "55", "55", "55", "56", "56", "56", "56", "56", "56", "56", "56", "56", "56", "56", "56", "57", "57", "57", "57", "57", "57", "57", "57", "57", "57", "57", "57", "58", "58", "58", "58", "58", "58", "58", "58", "58", "58", "58", "58", "59", "59", "59", "59", "59", "59", "59", "59", "59", "59", "59", "59", "60", "60", "60", "60", "60", "60", "60", "60", "60", "60", "60", "60", "61", "61", "61", "61", "61", "61", "61", "61", "61", "61", "61", "61", "62", "62", "62", "62", "62", "62", "62", "62", "62", "62", "62", "62", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "63", "64", "64", "64", "64", "64", "64", "64", "64", "64", "64", "64", "64", "65", "65", "65", "65", "65", "65", "65", "65", "65", "65", "65", "65", "66", "66", "66", "66", "66", "66", "66", "66", "66", "66", "66", "66", "67", "67", "67", "67", "67", "67", "67", "67", "67", "67", "67", "67", "68", "68", "68", "68", "68", "68", "68", "68", "68", "68", "68", "68", "69", "69", "69", "69", "69", "69", "69", "69", "69", "69", "69", "69", "70", "70", "70", "70", "70", "70", "70", "70", "70", "70", "70", "70", "71", "71", "71", "71", "71", "71", "71", "71", "71", "71", "71", "71", "72", "72", "72", "72", "72", "72", "72", "72", "72", "72", "72", "72", "73", "73", "73", "73", "73", "73", "73", "73", "73", "73", "73", "73", "74", "74", "74", "74", "74", "74", "74", "74", "74", "74", "74", "74", "75", "75", "75", "75", "75", "75", "75", "75", "75", "75", "75", "75", "76", "76", "76", "76", "76", "76", "76", "76", "76", "76", "76", "76", "77", "77", "77", "77", "77", "77", "77", "77", "77", "77", "77", "77", "78", "78", "78", "78", "78", "78", "78", "78", "78", "78", "78", "78", "79", "79", "79", "79", "79", "79", "79", "79", "79", "79", "79", "79", "80", "80", "80", "80", "80", "80", "80", "80", "80", "80", "80", "80", "81", "81", "81", "81", "81", "81", "81", "81", "81", "81", "81", "81", "82", "82", "82", "82", "82", "82", "82", "82", "82", "82", "82", "82", "83", "83", "83", "83", "83", "83", "83", "83", "83", "83", "83", "83", "84", "84", "84", "84", "84", "84", "84", "84", "84", "84", "84", "84", "85", "85", "85", "85", "85", "85", "85", "85", "85", "85", "85", "85", "86", "86", "86", "86", "86", "86", "86", "86", "86", "86", "86", "86", "87", "87", "87", "87", "87", "87", "87", "87", "87", "87", "87", "87", "88", "88", "88", "88", "88", "88", "88", "88", "88", "88", "88", "88", "89", "89", "89", "89", "89", "89", "89", "89", "89", "89", "89", "89", "90"},
            TickPositions = new List<long?>() { 0, 7, 19, 31, 43, 55, 67, 79, 91, 103, 115, 127, 139, 151, 163, 175, 187, 199, 211, 223, 235, 247, 259, 271, 283, 295, 307, 319, 331, 343, 355, 367, 379, 391, 403, 415, 427, 439, 451, 463, 475, 487, 499, 511, 523, 535, 547, 559, 571, 583, 595, 607, 619 }

        };
        ComboChart.YAxis = new YAxis()
        {
            Title = new Title(false)
        };

        if (tooltip == null)
        {
            ComboChart.Tooltip = new Tooltip()
            {
                ValuePrefix = tooltipValuePrefix,
                Split = tooltipSplit,
                Distance = 50,
                Padding = 2,
            };
        }
        ComboChart.PlotOptions = plotOptions;

        ComboChart.Series = series;
        ComboChart.Exporting.Buttons = new Buttons(exportEnabled);
        ComboChart.Exporting.SourceWidth = exportingSourceWidth;
        ComboChart.Exporting.SourceHeight = exportingSourceHeight;
        ComboChart.Exporting.ChartOptions = new ChartOptions();
    }


    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        chartService.RenderChart("avaloncombochart-" + uniqueID, ComboChart.Generate());
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        SetGraphParameters();

    }


}
