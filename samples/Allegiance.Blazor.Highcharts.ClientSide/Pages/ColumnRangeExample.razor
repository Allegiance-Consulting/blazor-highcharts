@page "/columnrange-chart"
@inject IChartService chartService
@inject IJSRuntime jsRuntime
<h3>Column Range Chart</h3>

<figure class="highcharts-figure">
    <div id="columnrangechart"></div>
</figure>


<h4>Code Example</h4>
<pre class="prettyprint opacity-load">
@@page &quot;/columnrange-chart&quot;
@@inject IChartService chartService
@@inject IJSRuntime jsRuntime
&lt;h3>Column Range Chart&lt;/h3>

&lt;figure class=&quot;highcharts-figure&quot;>
&lt;div id=&quot;columnrangechart&quot;>&lt;/div>
&lt;/figure>

@@code {
    private ChartObject ColumnChart = new ChartObject()
    {

        Title = new Title(&quot;Temperature variation by month&quot;),
        Subtitle = new Title(&quot;Observed in Vik i Sogn, Norway, 2017&quot;),
        XAxis = new XAxis()
        {
            Categories = new List&lt;object>()
            {
                &quot;Jan&quot;, &quot;Feb&quot;, &quot;Mar&quot;, &quot;Apr&quot;, &quot;May&quot;, &quot;Jun&quot;,&quot;Jul&quot;, &quot;Aug&quot;, &quot;Sep&quot;, &quot;Oct&quot;, &quot;Nov&quot;, &quot;Dec&quot;
            }
        },
        YAxis = new YAxis()
        {
            Title = new Title(&quot;Temperature ( °C )&quot;),
        },

        PlotOptions = new PlotOptions()
        {
            ColumnRange = new PlotOptionsColumnRange()
            {
                BorderRadius = 5,

            }


        },
        Series = new List&lt;SeriesElement>()
        {
            new SeriesElement()
            {
                Name = &quot;Temperatures&quot;,
                Type = ChartType.ColumnRange,
                ColorByPoint = false,
                Data = new List&lt;object>()
            {
            new List&lt;double>(){-9.9, 10.3},
            new List&lt;double>(){-8.6, 8.5},
            new List&lt;double>(){-10.2, 11.8},
            new List&lt;double>(){-1.7, 12.2},
            new List&lt;double>(){-0.6, 23.1},
            new List&lt;double>(){3.7, 25.4},
            new List&lt;double>(){6.0, 26.2},
            new List&lt;double>(){6.7, 21.4},
            new List&lt;double>(){3.5, 19.5},
            new List&lt;double>(){-1.3, 16.0},
            new List&lt;double>(){-8.7, 9.4},
            new List&lt;double>(){-9.0, 8.6 }
                }

                }
            }

    };

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        chartService.RenderChart(&quot;columnrangechart&quot;, ColumnChart.Generate());        
    }
}

</pre>


@code {
    private ChartObject ColumnChart = new ChartObject()
    {

        Title = new Title("Temperature variation by month"),
        Subtitle = new Title("Observed in Vik i Sogn, Norway, 2017"),
        XAxis = new XAxis()
        {
            Categories = new List<object>()
            {
                "Jan", "Feb", "Mar", "Apr", "May", "Jun","Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
            }
        },
        YAxis = new YAxis()
        {
            Title = new Title("Temperature ( °C )"),
        },

        PlotOptions = new PlotOptions()
        {
            ColumnRange = new PlotOptionsColumnRange()
            {
                BorderRadius = 5,

            }


        },
        Series = new List<SeriesElement>()
        {
            new SeriesElement()
            {
                Name = "Temperatures",
                Type = ChartType.ColumnRange,
                ColorByPoint = false,
                Data = new List<object?>()
            {
            new List<double>(){-9.9, 10.3},
            new List<double>(){-8.6, 8.5},
            new List<double>(){-10.2, 11.8},
            new List<double>(){-1.7, 12.2},
            new List<double>(){-0.6, 23.1},
            new List<double>(){3.7, 25.4},
            new List<double>(){6.0, 26.2},
            new List<double>(){6.7, 21.4},
            new List<double>(){3.5, 19.5},
            new List<double>(){-1.3, 16.0},
            new List<double>(){-8.7, 9.4},
            new List<double>(){-9.0, 8.6 }
                }

                }
            }

    };

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        chartService.RenderChart("columnrangechart", ColumnChart.Generate());
        jsRuntime.InvokeVoidAsync("prettyPrint");
    }


}
